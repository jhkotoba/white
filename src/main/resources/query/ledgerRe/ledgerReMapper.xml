<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="ledgerReMapper">

	<!-- SELECT -->

	<!-- 은행 조회 -->
	<select id="selectBankList" resultType="whiteMap" parameterType="whiteMap">
		SELECT
		  bank_seq AS bankSeq,
		  bank_name AS bankName,
		  bank_account AS bankAccount,
		  bank_now_use_yn AS bankNowUseYN
		FROM user_bank
		WHERE user_seq = #{userSeq}
		ORDER BY bank_seq ASC
	</select>
	
	<!--  -->
	<select id="selectPurList" resultType="whiteMap" parameterType="whiteMap">
		SELECT
			<if test="mode == 'select'">
			'select' AS state,
			</if>
			pur_seq AS purSeq,
	  		pur_order AS purOrder,
	 		purpose AS purpose
		FROM purpose
		WHERE user_seq = #{userSeq}
		ORDER BY pur_order
	</select>
	
	<!--  -->
	<select id="selectPurDtlList" resultType="whiteMap" parameterType="whiteMap">
		SELECT
			<if test="mode == 'select'">
			'select' AS state,
			</if>
			pur_dtl_seq AS purDtlSeq,
			pur_seq AS purSeq,
			pur_dtl_order AS purDtlOrder,
			pur_detail AS purDetail			
		FROM purpose_detail
		WHERE user_seq = #{userSeq}
		ORDER BY pur_dtl_order	
	</select>

	<!-- 금전기록 리스트 조회  -->
	<select id="selectRecordList" resultType="whiteMap" parameterType="whiteMap">
		SELECT
			<if test="mode == 'select'">
			'select' AS state,
			</if>
			rec.record_seq AS recordSeq,
			DATE_FORMAT(rec.record_date,'%Y-%m-%d %H:%i:%s') AS recordDate,
			IFNULL(rec.position, '') AS position,
			rec.content,
			rec.pur_seq AS purSeq,
			IFNULL(rec.pur_dtl_seq, '') AS purDtlSeq,
			rec.bank_seq AS bankSeq,
			IFNULL(rec.move_seq, '') AS moveSeq,
			rec.money,
			IFNULL(pur.purpose, 'move')	AS purpose,
			IFNULL(purDtl.pur_detail,'') AS purDetail,
			IFNULL(bank.bank_name, 'cash')	AS bankName,
			IFNULL(bank.bank_account, 'cash')	AS bankAccount,
			IFNULL(bank.bank_now_use_yn,'X') AS bankNowUseYN
		FROM money_record_re rec
		LEFT OUTER JOIN purpose pur
			ON rec.pur_seq = pur.pur_seq
		LEFT OUTER JOIN purpose_detail purDtl
			ON rec.pur_dtl_seq = purDtl.pur_dtl_seq
		LEFT OUTER JOIN user_bank bank
    		ON rec.bank_seq = bank.bank_seq
		WHERE rec.user_seq = #{userSeq}		
		AND rec.record_date <![CDATA[ >= ]]> #{startDate}
		AND rec.record_date <![CDATA[ <  ]]> #{endDate}			 	
		ORDER BY record_date ASC				
	</select>
	
	<!--  -->
	<select id="selectCalPastRecord" resultType="whiteMap" parameterType="java.util.List">
		SELECT
		<foreach collection="list" item="item" separator=",">
			(
			  SELECT 
			    SUM( 
			      CASE
			      WHEN bank_seq = #{item.bankSeq} THEN money
			      WHEN move_seq = #{item.bankSeq} THEN ABS(money)
			      END
			    )
			  FROM money_record_re
			  WHERE user_seq = #{item.userSeq} 
			  AND record_date <![CDATA[ < ]]>  #{item.startDate}
			)AS ${item.bankName}	
		</foreach>
	</select>
	
	<!-- 목적 사용되는지 확인 -->
	<select id="selectIsUsedPurpose" resultType="int" parameterType="java.util.List">
		SELECT COUNT(1) FROM money_record_re
		WHERE pur_seq IN
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item.purSeq}
		</foreach>
	</select>
	
	
	
	
	
	
	<!-- INSERT  -->
	
	<!--  -->
	<insert id="insertRecordList" parameterType="java.util.List">
		INSERT INTO money_record_re(		
			user_seq,	
			record_date,
			position,	
			content,	
			pur_seq,
			pur_dtl_seq,
			bank_seq,
			move_seq,
			money,
			reg_date
		)VALUES
		<foreach collection="list" item="item" separator="),(" open="(" close=")">
			#{item.userSeq}, 
			CONCAT(CONCAT(#{item.date}, ' '), #{item.time}),
			#{item.position},
			#{item.content}, 
			#{item.purSeq},	
			<choose>
				<when test="item.purDtlSeq == ''">
					NULL,
				</when>
				<otherwise>				
					#{item.purDtlSeq},
				</otherwise>
			</choose>
			#{item.bankSeq}, 
			<choose>
				<when test="item.moveSeq == ''">
					NULL,
				</when>
				<otherwise>				
					#{item.moveSeq},
				</otherwise>
			</choose>			 
			#{item.money},		
			now()
		</foreach>	
	</insert>
	
	
	<!-- 목적 리스트 insert -->
	<insert id="insertPurList" parameterType="java.util.List">
		INSERT INTO purpose(		
			user_seq,	
			pur_order,
			purpose
		)VALUES
		<foreach collection="list" item="item" separator="),(" open="(" close=")">
			#{item.userSeq}, 
			#{item.purOrder},
			#{item.purpose}			
		</foreach>	
	</insert>
	
	
	<!-- UPDATE -->
	
	<!-- 금전기록 list 수정 -->
	<update id="updateRecordList" parameterType="java.util.List">		
		UPDATE money_record_re
		SET record_date = 
		CASE		
		<foreach collection="list" item="item">
			WHEN record_seq = #{item.recordSeq} THEN #{item.recordDate}
		</foreach>		
		END,	
		content = 
		CASE		
		<foreach collection="list" item="item">
			WHEN record_seq = #{item.recordSeq} THEN #{item.content}
		</foreach>		
		END,	
		position = 
		CASE		
		<foreach collection="list" item="item">
			WHEN record_seq = #{item.recordSeq} THEN #{item.position}
		</foreach>		
		END,		
		pur_seq = 
		CASE		
		<foreach collection="list" item="item">
			WHEN record_seq = #{item.recordSeq} THEN #{item.purSeq}
		</foreach>		
		END,		
		pur_dtl_seq = 
		CASE		
		<foreach collection="list" item="item">
			<choose>
				<when test="item.purDtlSeq == ''">
					WHEN record_seq = #{item.recordSeq} THEN null
				</when>				
				<otherwise>
					WHEN record_seq = #{item.recordSeq} THEN #{item.purDtlSeq}
				</otherwise>
			</choose>			
		</foreach>		
		END,
		bank_seq = 
		CASE		
		<foreach collection="list" item="item">
			WHEN record_seq = #{item.recordSeq} THEN #{item.bankSeq}					
		</foreach>		
		END,		
		move_seq = 
		CASE		
		<foreach collection="list" item="item">
			<choose>				
				<when test="item.moveSeq == ''">
					WHEN record_seq = #{item.recordSeq} THEN NULL
				</when>				
				<otherwise>
					WHEN record_seq = #{item.recordSeq} THEN #{item.moveSeq}
				</otherwise>
			</choose>			
		</foreach>		
		END,		
		money = 
		CASE		
		<foreach collection="list" item="item">
			WHEN record_seq = #{item.recordSeq} THEN #{item.money}
		</foreach>		
		END		
		WHERE record_seq IN 
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item.recordSeq}
		</foreach>
	</update>
	
	<!-- 목적 list 수정 -->
	<update id="updatePurList" parameterType="java.util.List">		
		UPDATE purpose
		SET pur_order = 
		CASE		
		<foreach collection="list" item="item">
			WHEN pur_seq = #{item.purSeq} THEN #{item.purOrder}
		</foreach>		
		END,	
		purpose = 
		CASE		
		<foreach collection="list" item="item">
			WHEN pur_seq = #{item.purSeq} THEN #{item.purpose}
		</foreach>		
		END
		WHERE pur_seq IN 
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item.purSeq}
		</foreach>
	</update>
	
	
	<!-- DELETE -->
	
	<!-- 금전기록 list 삭제 -->
	<delete id="deleteRecordList" parameterType="java.util.List">
		DELETE FROM purpose
		WHERE record_seq IN 
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item.recordSeq}
		</foreach>
	</delete>
	
	<!-- 목적 list 삭제 -->
	<delete id="deletePurList" parameterType="java.util.List">
		DELETE FROM purpose
		WHERE pur_seq IN 
		<foreach collection="list" item="item" separator="," open="(" close=")">
			#{item.purSeq}
		</foreach>
	</delete>
	
</mapper>
